<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:mule-xml="http://www.mulesource.org/schema/mule/xml/2.2"
      xmlns:test="http://www.mulesource.org/schema/mule/test/2.2"
      xmlns:file="http://www.mulesource.org/schema/mule/file/2.2"
      xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
       http://www.mulesource.org/schema/mule/xml/2.2 http://www.mulesource.org/schema/mule/xml/2.2/mule-xml.xsd
       http://www.mulesource.org/schema/mule/test/2.2 http://www.mulesource.org/schema/mule/test/2.2/mule-test.xsd
       http://www.mulesource.org/schema/mule/file/2.2 http://www.mulesource.org/schema/mule/file/2.2/mule-file.xsd
       http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd">

    <!--
    TODO: You can define a test configuration here then from the Case5347TestCase you can fire events into
    Mule (using the MuleClient) and then assert the results.
    -->

    <mule-xml:namespace-manager >
        <mule-xml:namespace prefix="b2mml" uri="http://www.wbf.org/xml/B2MML-V0401" />

    </mule-xml:namespace-manager>

    <message-properties-transformer name="messageTransformer">
        <add-message-property key="ProductionPerformanceID" value="#[xpath:/b2mml:ProductionPerformance/b2mml:ID]" />
        <add-message-property key="PalletID" value="#[xpath:/b2mml:ProductionPerformance/b2mml:ProductionResponse/b2mml:SegmentResponse/b2mml:ProductionData[b2mml:ID='PALLET_ID']/b2mml:Value/b2mml:ValueString]" />
    </message-properties-transformer>

    <message-properties-transformer name="secondTransformer">
        <add-message-property key="expression" value="#[groovy:message.getProperty('PalletID') != null ? '_' + message.getProperty('PalletID', '') : '']" />
        <add-message-property key="outputPattern" value="#[groovy:message.getProperty('PalletID') != null ? '_' + message.getProperty('PalletID', '') : '']" />
    </message-properties-transformer>



    <vm:connector name="vmConnector" queueEvents="true" />
    <model>
        <service name="testService" >
            <inbound>
                <vm:inbound-endpoint path="in" transformer-refs="messageTransformer secondTransformer"/>
            </inbound>
            <test:component logMessageDetails="true"  />
            <outbound>
                <pass-through-router>
                    <file:outbound-endpoint path="/sftp/out/"  />
                </pass-through-router>
            </outbound>


        </service>
    </model>
</mule>
